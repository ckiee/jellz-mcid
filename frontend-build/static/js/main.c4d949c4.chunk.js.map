{"version":3,"sources":["ErrorNotification.tsx","Demo.tsx","App.tsx","index.tsx"],"names":["ErrorNotification","show","setShow","error","aria-live","className","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","aria-hidden","onClick","defaultStore","Demo","useState","code","setCode","pasted","setPasted","loading","setLoading","data","setData","showErrorNotif","setShowErrorNotif","setError","showJson","setShowJson","handleSubmit","event","a","preventDefault","console","log","fetch","process","REACT_APP_API_BASE","method","res","ok","json","setTimeout","useEffect","onSubmit","htmlFor","type","name","id","placeholder","onChange","value","target","toLowerCase","replace","onPaste","JSON","stringify","src","uuid","username","whyPoints","usageSteps","App","alt","map","p","s","Math","random","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4d949c4.chunk.js","sourcesContent":["import React, { Dispatch, Fragment, SetStateAction, useState } from 'react';\nimport { Transition } from '@headlessui/react';\nimport { CheckCircleIcon } from '@heroicons/react/outline';\nimport { XIcon } from '@heroicons/react/solid';\n\nexport default function ErrorNotification({\n\tshow,\n\tsetShow,\n\terror,\n}: {\n\tshow: boolean;\n\tsetShow: Dispatch<SetStateAction<boolean>>;\n\terror: string;\n}) {\n\treturn (\n\t\t<>\n\t\t\t{/* Global notification live region, render this permanently at the end of the document */}\n\t\t\t<div\n\t\t\t\taria-live='assertive'\n\t\t\t\tclassName='fixed inset-0 flex items-end px-4 py-6 pointer-events-none sm:p-6 sm:items-start'\n\t\t\t>\n\t\t\t\t<div className='w-full flex flex-col items-center space-y-4 sm:items-end'>\n\t\t\t\t\t{/* Notification panel, dynamically insert this into the live region when it needs to be displayed */}\n\t\t\t\t\t<Transition\n\t\t\t\t\t\tshow={show}\n\t\t\t\t\t\tas={Fragment}\n\t\t\t\t\t\tenter='transform ease-out duration-300 transition'\n\t\t\t\t\t\tenterFrom='translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2'\n\t\t\t\t\t\tenterTo='translate-y-0 opacity-100 sm:translate-x-0'\n\t\t\t\t\t\tleave='transition ease-in duration-100'\n\t\t\t\t\t\tleaveFrom='opacity-100'\n\t\t\t\t\t\tleaveTo='opacity-0'\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className='max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden'>\n\t\t\t\t\t\t\t<div className='p-4'>\n\t\t\t\t\t\t\t\t<div className='flex items-start'>\n\t\t\t\t\t\t\t\t\t<div className='flex-shrink-0'>\n\t\t\t\t\t\t\t\t\t\t<XIcon\n\t\t\t\t\t\t\t\t\t\t\tclassName='h-6 w-6 text-red-400'\n\t\t\t\t\t\t\t\t\t\t\taria-hidden='true'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='ml-3 w-0 flex-1 pt-0.5'>\n\t\t\t\t\t\t\t\t\t\t<p className='text-sm font-medium text-gray-900'>{error}</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='ml-4 flex-shrink-0 flex'>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName='bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetShow(false);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<span className='sr-only'>Close</span>\n\t\t\t\t\t\t\t\t\t\t\t<XIcon className='h-5 w-5' aria-hidden='true' />\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Transition>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n","import { CodeIcon, SparklesIcon } from '@heroicons/react/outline';\nimport {\n\tFormEvent,\n\tChangeEvent,\n\tClipboardEvent,\n\tuseState,\n\tuseEffect,\n} from 'react';\nimport ErrorNotification from './ErrorNotification';\n\nconst defaultStore = {\n\tname: '...',\n\tuuid: '...',\n\tavatarUuid: '606e2ff0ed7748429d6ce1d3321c7838',\n};\n\ninterface ResponseData {\n\tcode?: string;\n\tcreated?: number;\n\texpiry?: number;\n\tuuid?: string;\n\tusername?: string;\n}\n\nexport default function Demo() {\n\tconst [code, setCode] = useState<string>('');\n\tconst [pasted, setPasted] = useState(false);\n\tconst [loading, setLoading] = useState(false);\n\tconst [data, setData] = useState<ResponseData>({});\n\tconst [showErrorNotif, setShowErrorNotif] = useState(false);\n\tconst [error, setError] = useState<string>('An error occurred');\n\tconst [showJson, setShowJson] = useState(false);\n\n\tconst handleSubmit = async (event?: FormEvent<HTMLFormElement>) => {\n\t\tif (event) event.preventDefault();\n\t\tif (!code || loading) return;\n\t\tconsole.log(code);\n\t\tsetLoading(true);\n\n\t\t// await new Promise(r => setTimeout(r, 2000));\n\n\t\tconst res = await fetch(\n\t\t\t(process.env.REACT_APP_API_BASE || '') + `/api/verify/${code}`,\n\t\t\t{\n\t\t\t\tmethod: 'post',\n\t\t\t}\n\t\t);\n\n\t\tif (!res.ok) {\n\t\t\ttry {\n\t\t\t\tconst json: { error: string } = await res.json();\n\t\t\t\tconsole.log(json.error);\n\t\t\t\tif (json.error) setError(json.error);\n\t\t\t} catch (err) {\n\t\t\t\tsetError('An error occurred');\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\n\t\t\tsetData({});\n\t\t\tsetCode('');\n\t\t\tsetLoading(false);\n\t\t\tsetShowErrorNotif(true);\n\t\t\treturn setTimeout(() => setShowErrorNotif(false), 4000);\n\t\t}\n\n\t\tconst json: ResponseData = await res.json();\n\t\tsetData(json);\n\t\tsetLoading(false);\n\t};\n\n\tconst handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n\t\tlet { value } = event.target;\n\t\tif (value) value = value.toLowerCase().replace(/ /gi, '');\n\t\tsetCode(value);\n\t};\n\n\tconst handlePaste = (event: ClipboardEvent<HTMLInputElement>) =>\n\t\tsetPasted(true);\n\n\tuseEffect(() => {\n\t\tif (pasted) handleSubmit();\n\t\tsetPasted(false);\n\t}, [code]);\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='max-w-7xl mx-auto my-2 '>\n\t\t\t\t<div className='bg-white h-64 rounded-lg shadow-xl overflow-hidden lg:grid lg:grid-cols-2'>\n\t\t\t\t\t<div className='pt-10 pb-12 px-6 sm:pt-16 sm:px-16 lg:py-16 lg:pr-0 xl:py-20 xl:px-17'>\n\t\t\t\t\t\t<div className='lg:self-center'>\n\t\t\t\t\t\t\t<div className='max-w-3xl'>\n\t\t\t\t\t\t\t\t<h4 className='text-center mb-2'>\n\t\t\t\t\t\t\t\t\tConnect to <span className='font-semibold'>mcid.party</span>{' '}\n\t\t\t\t\t\t\t\t\t(1.8-1.19.x) and enter the code you receive{' '}\n\t\t\t\t\t\t\t\t\t<span className='text-sm italic'>\n\t\t\t\t\t\t\t\t\t\t(note: the code will only work once)\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t\t<label htmlFor='email' className='sr-only'>\n\t\t\t\t\t\t\t\t\t\tVerification code\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<div className='grid grid-cols-3'>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\tname='code'\n\t\t\t\t\t\t\t\t\t\t\tid='code'\n\t\t\t\t\t\t\t\t\t\t\tclassName='font-mono col-span-2 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md'\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='funny-bear'\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\tvalue={code}\n\t\t\t\t\t\t\t\t\t\t\tonPaste={handlePaste}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\t\tclassName={`${\n\t\t\t\t\t\t\t\t\t\t\t\tloading\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 'bg-indigo-400 cursor-not-allowed'\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'bg-indigo-600 hover:bg-indigo-700'\n\t\t\t\t\t\t\t\t\t\t\t} mx-2 w-full px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md shadow-sm text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500`}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{loading ? 'Verifying...' : 'Verify'}\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='relative pt-10 pb-12 px-4 sm:pt-16 sm:px-14 lg:py-16 lg:pr-0 xl:py-20 xl:px-10'>\n\t\t\t\t\t\t<div className='lg:self-center'>\n\t\t\t\t\t\t\t<div className='max-w-2xl'>\n\t\t\t\t\t\t\t\t{showJson && (\n\t\t\t\t\t\t\t\t\t<div className='h-10 -mt-4 -ml-4'>\n\t\t\t\t\t\t\t\t\t\t<code className='text-sm'>\n\t\t\t\t\t\t\t\t\t\t\t<pre>{JSON.stringify(data, null, 2)}</pre>\n\t\t\t\t\t\t\t\t\t\t</code>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{!showJson && (\n\t\t\t\t\t\t\t\t\t<div className='grid grid-cols-3'>\n\t\t\t\t\t\t\t\t\t\t<div className='col-span-1'>\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={`https://crafatar.com/avatars/${\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata.uuid || defaultStore.avatarUuid\n\t\t\t\t\t\t\t\t\t\t\t\t}?overlay`}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='w-24 h-24 rounded-md'\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='col-span-2 text-center'>\n\t\t\t\t\t\t\t\t\t\t\t<span className='font-semibold'>\n\t\t\t\t\t\t\t\t\t\t\t\t{data.username || defaultStore.name}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t<span className='text-gray-400 font-mono text-sm'>\n\t\t\t\t\t\t\t\t\t\t\t\t{data.uuid || defaultStore.uuid}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='absolute bottom-3 right-4'>\n\t\t\t\t\t\t\t{showJson ? (\n\t\t\t\t\t\t\t\t<SparklesIcon\n\t\t\t\t\t\t\t\t\tclassName='w-6 text-gray-400 cursor-pointer'\n\t\t\t\t\t\t\t\t\tonClick={() => setShowJson(false)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<CodeIcon\n\t\t\t\t\t\t\t\t\tclassName='w-6 text-gray-400 cursor-pointer'\n\t\t\t\t\t\t\t\t\tonClick={() => setShowJson(true)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<ErrorNotification\n\t\t\t\tshow={showErrorNotif}\n\t\t\t\tsetShow={setShowErrorNotif}\n\t\t\t\terror={error}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n","import { CheckIcon } from '@heroicons/react/solid';\nimport Demo from './Demo';\n\nconst whyPoints = [\n\t'Free & open source',\n\t'Easy to use',\n\t'Supports 1.8 to 1.19.3',\n\t'Minimal data collection',\n];\n\nconst usageSteps = [\n\t<>\n\t\tOn your frontend, instruct the user to connect to the Minecraft server{' '}\n\t\t<span className='font-semibold'>mcid.party</span> on 1.8-1.19.x\n\t</>,\n\t<>Accept the user received code to your backend (through a form)</>,\n\t<>\n\t\tSend a HTTP request to the endpoint below with the verification code, and\n\t\tyou will receive information about the verified Minecraft account\n\t</>,\n];\n\nfunction App() {\n\treturn (\n\t\t<div>\n\t\t\t<div className='max-w-7xl mx-auto px-4 sm:px-6 lg:px-8'>\n\t\t\t\t<div className='max-w-4xl mx-auto'>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc='/logo.png'\n\t\t\t\t\t\t\tclassName='align-middle w-12 inline mx-0 my-4'\n\t\t\t\t\t\t\talt='Logo - lock'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<h1 className='text-4xl align-middle inline mx-2 my-4 font-semibold'>\n\t\t\t\t\t\t\tMCID\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='my-4'>\n\t\t\t\t\t\tMCID is an API for developers to easily authenticate external users\n\t\t\t\t\t\twith their Minecraft accounts.\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='my-4'>\n\t\t\t\t\t\t<h2 className='text-xl font-bold'>Why MCID?</h2>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{whyPoints.map(p => (\n\t\t\t\t\t\t\t\t<li key={p}>\n\t\t\t\t\t\t\t\t\t<CheckIcon className='w-5 text-green-500 inline' /> {p}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='my-4'>\n\t\t\t\t\t\t<h2 className='text-xl font-bold'>How does it work?</h2>\n\t\t\t\t\t\tAs a developer, you simply need to instruct users to connect to the\n\t\t\t\t\t\tMinecraft server <span className='font-semibold'>\n\t\t\t\t\t\t\tmcid.party\n\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\tand consume the one-use code they receive (e.g. in a form). Then, on\n\t\t\t\t\t\tyour backend, send a request to the endpoint detailed below with the\n\t\t\t\t\t\tverification code to receive information about the Minecraft\n\t\t\t\t\t\taccount.\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\tAll individual verification data is ephemeral. Verification codes,\n\t\t\t\t\t\tand their associated data, last for three minutes before they are\n\t\t\t\t\t\tmarked for expiry. Once a verification code has been consumed, it is\n\t\t\t\t\t\timmediately deleted, leaving the system with no knowledge of\n\t\t\t\t\t\tprevious players or clients.\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='my-4'>\n\t\t\t\t\t\t<h2 className='text-xl font-bold'>Usage</h2>\n\t\t\t\t\t\t<ol className='mb-4'>\n\t\t\t\t\t\t\t{usageSteps.map(s => (\n\t\t\t\t\t\t\t\t<li key={Math.random()} className='list-inside list-decimal'>\n\t\t\t\t\t\t\t\t\t{s}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t<h3 className='text-lg font-semibold'>API</h3>\n\t\t\t\t\t\t<code className='text-lg'>\n\t\t\t\t\t\t\tPOST https://mcid.party/api/verify/:code\n\t\t\t\t\t\t</code>\n\t\t\t\t\t\t<h3 className='text-lg'>Example</h3>\n\t\t\t\t\t\t<code className='text-lg'>\n\t\t\t\t\t\t\tPOST https://mcid.party/api/verify/funny-bear\n\t\t\t\t\t\t</code>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\tAPI responses are in JSON format. Try the demo below to see a\n\t\t\t\t\t\tresponse.\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='my-4'>\n\t\t\t\t\t\t<h2 className='text-xl font-bold'>Demo</h2>\n\t\t\t\t\t\t<Demo />\n\t\t\t\t\t</div>\n\t\t\t\t\t<footer className='bottom-10 my-10 w-full text-center'>\n\t\t\t\t\t\t<span className='text-gray-500 font-medium'>\n\t\t\t\t\t\t\t<a href='https://github.com/jellz/mcid'>Open-source on GitHub</a>{' '}\n\t\t\t\t\t\t\t&bull; <a href='https://github.com/jellz/mcid#license'>License</a>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<span className='text-gray-400'>\n\t\t\t\t\t\t\tCopyright &copy;{' '}\n\t\t\t\t\t\t\t<a className='font-semibold' href='https://jlz.fun'>\n\t\t\t\t\t\t\t\tDaniel Gulic\n\t\t\t\t\t\t\t</a>{' '}\n\t\t\t\t\t\t\t2021\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</footer>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}